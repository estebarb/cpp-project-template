name: CI

on: [pull_request, merge_group]

jobs:
    format:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            - name: Set up clang-format
              run: sudo apt-get install clang-format
            - name: Run clang-format
              run: clang-format -i -style=file $(find . -name '*.c' -or -name '*.cc' -or -name '*.cpp' -or -name '*.cxx' -or -name '*.h' -or -name '*.hh' -or -name '*.hxx' -or -name '*.hpp')
            - name: Check for changes
              run: git diff --exit-code
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            - name: Configure
              run: cmake -B build -S . -DCMAKE_BUILD_TYPE=DEBUG 
            - name: Build
              run: cmake --build build
            - name: Test
              run: |
                cd build
                ctest --output-on-failure
    infer:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            - name: Install dependencies
              run: VERSION=1.1.0; curl -sSL "https://github.com/facebook/infer/releases/download/v$VERSION/infer-linux64-v$VERSION.tar.xz" | sudo tar -C /opt -xJ && sudo ln -s "/opt/infer-linux64-v$VERSION/bin/infer" /usr/local/bin/infer
            - name: Configure
              run: cmake -B build -S . -DCMAKE_BUILD_TYPE=DEBUG
            - name: Build
              run: cmake --build build
            - name: Run infer
              run: |
                cd build
                infer run -- make
    cppcheck:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            - name: Install dependencies
              run: sudo apt-get install cppcheck
            - name: Run cppcheck
              run: cppcheck --enable=all --error-exitcode=1 --includes-file=./include/ --language=c++ --std=c++11 -i src/CMakelists.txt src/*
    valgrind:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            - name: Install dependencies
              run: sudo apt-get install valgrind
            - name: Configure
              run: cmake -B build -S . -DCMAKE_BUILD_TYPE=DEBUG
            - name: Build
              run: cmake --build build
            - name: Run valgrind
              run: valgrind --leak-check=full --error-exitcode=1 ./build/unit_tests
    code-coverage-xml:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            - name: Install dependencies
              run: sudo apt-get install gcovr
            - name: Configure
              run: cmake -B build -S . -DCMAKE_BUILD_TYPE=DEBUG -DCOVERAGE=ON
            - name: Build
              run: cmake --build build
            - name: Test
              run: |
                cd build
                make
                make coverage_xml
    code-coverage-html:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            - name: Install dependencies
              run: sudo apt-get install gcovr
            - name: Configure
              run: cmake -B build -S . -DCMAKE_BUILD_TYPE=DEBUG -DCOVERAGE=ON
            - name: Build
              run: cmake --build build
            - name: Test
              run: |
                cd build
                make
                make coverage_html
    upload-coverage:
        runs-on: ubuntu-latest
        if: success() || failure()
        needs: [code-coverage-xml, code-coverage-html]
        steps:
            - name: Upload coverage
              uses: actions/upload-artifact@v4
              with:
                name: coverage
                path: build/coverage_html
